install.packages(c("ggplot2", "randomForest"))
install.packages("rmongodb")
install.packages(c("rjson", "RJSONIO", "e1071"))
install.packages("caret")
install.packages("dplyr")
install.packages("xlsx")
install.packages("Rserve")
install.packages("knitr")
install.packages("knitLatex")
install.packages("latex2exp")
install.packages("manipulate")
library(Rserve)
Rserve()
install.packages(c("tm", "SnowballC", "cluster", "NbClust", "fpc", "rmongodb", "psych"))
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-2.0")
library(Rserve)
Rserve()
install.packages("rmongodb")
library(Rserve)
Rserve()
source("C:\Users\i55289\Documents\eclipse_mars_new\workspace\webcrawlerapp\src\com\scraper\data\science\clustering\KMeansClustering.R")
source("C:\\\\Users\\\\i55289\Documents\\\\eclipse_mars_new\\\\workspace\\\\webcrawlerapp\\\\src\\\\com\\\\scraper\\\\data\\\\science\\\\clustering\\\\KMeansClustering.R")
source("C:\\\\Users\\\\i55289\\\\Documents\\\\eclipse_mars_new\\\\workspace\\\\webcrawlerapp\\\\src\\\\com\\\\scraper\\\\data\\\\science\\\\clustering\\\\KMeansClustering.R")
kmeansclustering("symbilitysolutions")
library(devtools)
install.packages("devtools")
library(devtools)
library(Rcpp)
install_github('ramnathv/rCharts')
install.packages("reshape2")
install.packages("leaflet")
install.packages("googleVis")
pkgs <- c("slidify", "slidifyLibraries", "rCharts")
install_github(pkgs, 'ramnathv', ref = 'dev')
install_github(ropensci/plotly)
install_github("ropensci/plotly")
install_github("slidify", "ramnathv")
install_github("ramnathv/slidify")
install_github("ramnathv/slidify", force = TRUE)
install_github("ramnathv/slidifyLibraries", force = TRUE)
install.packages(c("caret", "cluster", "lme4", "testthat"))
swirl()
library(swirl)
swirl()
1
21/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(E(X_hi)_E(X_lo))
0.5*(E(X_hi)+E(X_lo))
0.5*(edh+edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
dice_sqr
ex2_fair <- dice_sqr*dice_fair
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair - (3.5)^2
ex2_fair - 3.5^2
sum(dice_sqr*dice_high) - edh^2
sd(apply(matrix(rnorm(10000), 1000), 1, mean))
1/sqrt(10)
1/sqrt(!20)
1/sqrt(120)
sd(apply(matrix(runif(10000), 1000), 1, mean))
2/sqrt(n)
2/sqrt(10)
sd(apply(matrix(rpois(10000, 4), 1000), 1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1, 10000, TRUE), 1000), 1,mean))
library(swirl)
swirl()
bye()
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = 'red')
summary(regrline)
fit <- lm(child ~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
0
bye()
exit()
library(swirl)
swirl()
0.8*0.8*0.8*0.2*0.2
3*0.8^3*0.2^2
(3*0.8^3*0.2^2)+(4*0.8^4*0.2^1)+(5*0.8^5)
skip()
pbinom(2, 5, 0.8, lower.tail=FALSE)
qnorm(0.10)
no
-6.4
0
qnorm(0.975, mean = 3, sd=2)
3 + (2*1.96)
pnorm(1200, 1020, 50)
pnorm(1200, mean=1020, sd=50, lower.tail = FALSE)
pnorm(1200, mean=1020, sd=50, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE)
qnorm(0.75, 1020, 50, lower.tail=TRUE)
0.53
0.53
ppois(3, 2.5*4, lower.tail = TRUE, log.p = FALSE)
pbinom(5, 1000, 0.01)
ppois(5, 1000*0.01)
myplot(2)
myplot(20)
myplot2(2)
qt(0.975, 2)
myplot2(20)
sleep
range()
range(g1)
range(g2)
difference <- g2-g1
mean(difference)
s <- sd(difference)
skip()
x$conf.int
skip()
swirl()
library(Rserve)
Rserve()
source("https://bioconductor.org/biocLite.R")
biocLite("ALL")
library(ALL)
data(ALL)
?ALL
summary(ALL)
print(summary(pData(ALL)))
x <- t(exprs(ALL))
y <- substr(ALL$BT, 1,1 )
unique(y)
sum(y == "B")
sum(y == "T")
library(e1071)
library(rpart)
data(Glass, package="mlbench")
index <- 1:nrow(Glass)
testindex <- sample(index, trunc(length(index)/3))
testset <- Glass[testindex,]
trainset <- Glass[-testindex,]
svm.model <- svm(Type ~ ., data=trainset, cost=100, gamma = 1)
svm.pred <- predict(svm.model, testset[,-10])
rpart.model <- rpart(Type ~ ., data=trainset)
library(swirl)
swirl()
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
swirl()
10/sqrt(100)
(32-30)/1
(32-30)/(10/sqrt(16))
16-1
qt(.95,15)
dim(fs)
t.test(fs$fheight, fs$sheight, TRUE)
t.test(fs, paired=TRUE)
?t.test
t.test(fs$sheight-fs$fheight)
11.7885*sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
swirl()
pt(q=2.5,df=15,lower.tail = FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(7, lower.tail = TRUE)
pbinom(size=7, prob = 0.5, lower.tail = TRUE)
pbinom(7, size = 8, prob = 0.5, lower.tail = TRUE)
ppois(9, 5, lower.tail = FALSE)
library(swirl)
swirl()
fit <- lm(child ~ parent, data=galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
bye()
library(swirl)
swirl()
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
swirl()
options(editor = "internal")
swirl()
lhs-rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- est(ols.slope, ols.ic)
varEst <- var(est)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, sum(varRes, varEst))
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
l_nor <- lm(child ~ parent, data=galton)
l_nor <- lm(gch_nor ~ gpa_nor)
one <- rep(1, nrow(galton))
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
git2 <- lm(Volime ~ Height + Constant -`, trees2)
1
r3q
ekorjwpoe()
a
''
''dq'we'
23123
bye()
fsee
library(swirl)
swirl()
options(editor = "internal")
swirl()
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(Fertility ~ ., swiss)
all <- lm(Fertility ~ .,, swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(Examination, Education)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays, 15)
sA
summary(InsectSprays[, 2])
sapply
sapply(InsectSprays, class)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray -1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray2)
fit2 <- lm(count ~ spray, spray2)
fit2 <- lm(count ~ spray2, spray)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
fit$coef[2] - fit$coef[3]
(fit$coef[2] - fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex == "Female"])
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex == "Female",])
lmF <- lm(Numeric[Sex == "Female"] ~ Year[Sex=="Female"], hunger)
lmM <- lm(Numeric[Sex == "Male"] ~ Year[Sex=="Male"], hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidify', 'ramnathv', force = TRUE)
install_github('slidifyLibraries', 'ramnathv', force = TRUE)
library(slidify)
setwd("~/RProgramFiles/Developing_Data_Products")
author("dataProducts")
